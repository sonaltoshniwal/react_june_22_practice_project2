{"ast":null,"code":"var _jsxFileName = \"/Users/sonal/reactjs/demos/practiceproject2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"isLogged\") === \"1\") {\n      // console.log(\"test\");\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    setIsLoggedIn(true); // localStorage[\"islogged\"]=\"1\";\n    // localStorage.isLogged=\"1\";\n\n    localStorage.setItem(\"isLogged\", \"1\");\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.setItem();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sonal/reactjs/demos/practiceproject2/src/App.js"],"names":["React","useState","Login","Home","MainHeader","useEffect","App","isLoggedIn","setIsLoggedIn","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,SAAT,QAA0B,6BAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACAI,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,GAAzC,EAA8C;AAC5C;AACAF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMG,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCL,IAAAA,aAAa,CAAC,IAAD,CAAb,CADwC,CAExC;AACA;;AACAC,IAAAA,YAAY,CAACK,OAAb,CAAqB,UAArB,EAAiC,GAAjC;AACD,GALD;;AAMA,QAAMC,aAAa,GAAG,MAAM;AAC1BP,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,IAAAA,YAAY,CAACK,OAAb;AACD,GAHD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,eAAe,EAAEP,UAA7B;AAAyC,MAAA,QAAQ,EAAEQ;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACG,CAACR,UAAD,iBAAe,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEI;AAAhB;AAAA;AAAA;AAAA;AAAA,cADlB,EAEGJ,UAAU,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEQ;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA5BQT,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport { useEffect } from \"react/cjs/react.development\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"isLogged\") === \"1\") {\n      // console.log(\"test\");\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    setIsLoggedIn(true);\n    // localStorage[\"islogged\"]=\"1\";\n    // localStorage.isLogged=\"1\";\n    localStorage.setItem(\"isLogged\", \"1\");\n  };\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n    localStorage.setItem()\n  };\n  return (\n    <React.Fragment>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}