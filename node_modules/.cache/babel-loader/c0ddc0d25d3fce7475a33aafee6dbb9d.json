{"ast":null,"code":"var _jsxFileName = \"/Users/sonal/reactjs/demos/practiceproject2/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"USER_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"USER_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false\n  }); // useEffect(() => {\n  //  const timer= setTimeout(() => {\n  //     //Debouncing\n  //     console.log(\"this is in useeffect\");\n  //     ///write the code to connect to the rest api and check it\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return ()=>{\n  //     //console.log(\"Cleanup function called\");\n  //     clearTimeout(timer);\n  //   }\n  //Debouncing\n  // console.log(\"this is in useeffect\");\n  // ///write the code to connect to the rest api and check it\n  // setFormIsValid(\n  //   enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  // );\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && passwordState.value.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.trim().length > 6 && emailState.value.includes('@'));\n  };\n\n  const validateEmailHandler = () => {\n    //setEmailIsValid(emailState.value.includes(\"@\"));\n    dispatchEmail({\n      type: \"USER_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(passwordState.value.trim().length > 6);\n    dispatchPassword({\n      type: \"USER_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n    localStorage.setItem(\"isLogged\", \"1\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"zUKBctcahJRpZhhcSlJnIhZQrKE=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/sonal/reactjs/demos/practiceproject2/src/components/Login/Login.js"],"names":["React","useReducer","useState","Card","classes","Button","useEffect","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailChangeHandler","event","target","trim","length","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","localStorage","setItem","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useReducer, useState } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { useEffect } from \"react/cjs/react.development\";\n\nconst emailReducer=(state,action)=>\n{\n\n  if(action.type===\"USER_INPUT\")\n  {\n    return {value:action.val,isValid:action.val.includes(\"@\")}\n  }\n  if(action.type===\"USER_BLUR\")\n  {\n    return {value:state.value,isValid:state.value.includes(\"@\")}\n  }\n  return {value:\"\",isValid:false};\n}\nconst passwordReducer=(state,action)=>\n{\n\n  if(action.type===\"USER_INPUT\")\n  {\n    return {value:action.val,isValid:action.val.includes(\"@\")}\n  }\n  if(action.type===\"USER_BLUR\")\n  {\n    return {value:state.value,isValid:state.value.includes(\"@\")}\n  }\n  return {value:\"\",isValid:false};\n}\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  \n  const [emailState,dispatchEmail]=useReducer(emailReducer,{value:\"\",isValid:false});\n  const [passwordState,dispatchPassword]=useReducer(passwordReducer,{value:\"\",isValid:false});\n\n   \n  // useEffect(() => {\n  //  const timer= setTimeout(() => {\n  //     //Debouncing\n  //     console.log(\"this is in useeffect\");\n  //     ///write the code to connect to the rest api and check it\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return ()=>{\n  //     //console.log(\"Cleanup function called\");\n  //     clearTimeout(timer);\n  //   }\n\n      //Debouncing\n      // console.log(\"this is in useeffect\");\n      // ///write the code to connect to the rest api and check it\n      // setFormIsValid(\n      //   enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n      // );\n // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({type:\"USER_INPUT\",val:event.target.value})\n\n    setFormIsValid(\n      event.target.value.includes('@') && passwordState.value.trim().length > 6\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({type:\"USER_INPUT\",val:event.target.value})\n\n    setFormIsValid(\n      event.target.value.trim().length > 6 && emailState.value.includes('@')\n    );\n  };\n\n  const validateEmailHandler = () => {\n    //setEmailIsValid(emailState.value.includes(\"@\"));\n    dispatchEmail({type:\"USER_BLUR\"});\n  };\n\n  const validatePasswordHandler = () => {\n   // setPasswordIsValid(passwordState.value.trim().length > 6);\n   dispatchPassword({type:\"USER_BLUR\"});\n\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n    localStorage.setItem(\"isLogged\", \"1\");\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}