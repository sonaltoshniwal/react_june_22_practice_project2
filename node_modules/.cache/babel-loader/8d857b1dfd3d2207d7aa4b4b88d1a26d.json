{"ast":null,"code":"var _jsxFileName = \"/Users/sonal/reactjs/demos/practiceproject2/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false\n  }); // useEffect(() => {\n  //  const timer= setTimeout(() => {\n  //     //Debouncing\n  //     console.log(\"this is in useeffect\");\n  //     ///write the code to connect to the rest api and check it\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return ()=>{\n  //     //console.log(\"Cleanup function called\");\n  //     clearTimeout(timer);\n  //   }\n  //Debouncing\n  // console.log(\"this is in useeffect\");\n  // ///write the code to connect to the rest api and check it\n  // setFormIsValid(\n  //   enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  // );\n  // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && enteredPassword.trim().length > 6);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(event.target.value.trim().length > 6 && emailState.value.includes('@'));\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(emailState.value.includes(\"@\"));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n    localStorage.setItem(\"isLogged\", \"1\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"46vPHhb8ndq8whAhgwdLuRxI68s=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/sonal/reactjs/demos/practiceproject2/src/components/Login/Login.js"],"names":["React","useReducer","useState","Card","classes","Button","useEffect","emailReducer","state","action","type","value","val","isValid","Login","props","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","emailChangeHandler","event","target","includes","trim","length","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","localStorage","setItem","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useReducer, useState } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { useEffect } from \"react/cjs/react.development\";\n\nconst emailReducer=(state,action)=>\n{\n\n  if(action.type===\"USER_INPUT\")\n  {\n    return {value:action.val}\n  }\n  return {value:\"\",isValid:false};\n\n}\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState,dispatchEmail]=useReducer(emailReducer,{value:\"\",isValid:false});\n   \n  // useEffect(() => {\n  //  const timer= setTimeout(() => {\n  //     //Debouncing\n  //     console.log(\"this is in useeffect\");\n  //     ///write the code to connect to the rest api and check it\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   return ()=>{\n  //     //console.log(\"Cleanup function called\");\n  //     clearTimeout(timer);\n  //   }\n\n      //Debouncing\n      // console.log(\"this is in useeffect\");\n      // ///write the code to connect to the rest api and check it\n      // setFormIsValid(\n      //   enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n      // );\n // }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({type:\"USER_INPUT\",val:event.target.value})\n\n    setFormIsValid(\n      event.target.value.includes('@') && enteredPassword.trim().length > 6\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(\n      event.target.value.trim().length > 6 && emailState.value.includes('@')\n    );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(emailState.value.includes(\"@\"));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n    localStorage.setItem(\"isLogged\", \"1\");\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}